import React, { useRef } from "react";
import { useFormik } from 'formik';
import { InputText } from "primereact/inputtext";
import { Button } from 'primereact/button';
import { Toast } from 'primereact/toast';
import { classNames } from 'primereact/utils';
import WrapperHeder from "../components/molecules/WrapperHeder";
import WrapeerFoter from "../components/molecules/WrapperFoter";
import FormPago from "../components/organism/FormPago";
import WrapperInput from "../components/molecules/WrapperInput";
import Buttom from "../components/atoms/Buttom";

function PagoMeet() {
    const toast = useRef(null);

    const show = () => {
        toast.current.show({ severity: 'success', summary: 'Form Submitted', detail: formik.values.value });
    };

    const formik = useFormik({
        initialValues: {
            value: ''
        },
        validate: (data) => {
            let errors = {};

            if (!data.value) {
                errors.value = 'Name - Surname is required.';
            }

            return errors;
        },
        onSubmit: (data) => {
            data && show(data);
            formik.resetForm();
        }
    });

    const isFormFieldInvalid = (name) => !!(formik.touched[name] && formik.errors[name]);

    const getFormErrorMessage = (name) => {
        return isFormFieldInvalid(name) ? <small className="p-error">{formik.errors[name]}</small> : <small className="p-error">&nbsp;</small>;
    };

    return(
        <>
        <WrapperHeder/>
        <FormPago/>    
        <WrapeerFoter/>
       
        </> 


    )
}
export default PagoMeet;







<div class="card">
            <div class="flex flex-wrap md:justify-content-between justify-content-center card-container ">                                                                                                                
                <div class="col-lg-4 pt-5">
                    <div class="rounded p-4 p-sm-0 wow fadeIn" id="conForm" data-wow-delay="0.5s">
                        <h1 class="display-5 text-black-50 text-center mb-5">LOGIN</h1>
                        <form onSubmit={formik.handleSubmit} >
                         <div class="row g-3 m-3">
                            <div className="col-12">
                                <span className="p-float-label">
                                    <Toast ref={toast} />
                                    <InputText id="" name="value"
                                    value={formik.values.value}
                                    onChange={(e) => {formik.setFieldValue('value', e.target.value);}}className={classNames({ 'p-invalid': isFormFieldInvalid('value') })}
                                    style={{ backgroundColor: 'var(--primary-color)', color: 'var(--primary-color-text)', borderRadius: 'var(--border-radius)', width: '100%', maxWidth: '100%'}}
                                    />
                                   <label htmlFor="input_value">Name - Surname</label>
                                </span>             
                            </div>
                            <div className="col-12 flex justify-content-center flex-column">
                                <h2 className="justify-content-center text-center">{getFormErrorMessage('value')}</h2>
                                <Button className="btn btn-primary justify-content-center" type="submit" label="Submit"/>
                            </div>
                            
                        </div>                            
                        </form>
                        
                    </div>
                </div>
                <div class="col-lg-5 pt-5">
                    <div class="rounded p-4 p-sm-0 wow fadeIn" id="conForm" data-wow-delay="0.5s">
                        <h1 class="display-5 text-black-50 text-center mb-5">LOGIN</h1>
                        <div class="row g-3 m-3">
                            <div class="col-12">
                               <WrapperInput
                                msn="Username"
                                type="text"
                                placeholder="Firts name and last name" />
                            </div>
                            
                            <div class="col-12">
                                <WrapperInput
                                msn="Password"
                                type="password"
                                placeholder="Firts name and last name" />
                                
                            </div>

                        
                            <div class="col-12 text-center">
                                <Buttom class="btn btn-primary py-3 px-4">Submit Now</Buttom>
                            </div>
                        </div>
                    </div>
                </div>    
            </div>
        </div>







        import React, { Component } from 'react';
import GoogleMapReact from 'google-map-react';

import './styles.css';

const API_KEY ='you_apiKey';

class GumMap extends Component {
  constructor(props){
    super(props)
    this.state = {
      mapsLoaded: false,
      map: null,
      maps: null,
      selectedLocation: 1,
    }
  }
  handleApiLoaded = ({ map, maps }) => {
    this.setState({
      ...this.state,
      isMapsLoaded: true,
      map: map,
      maps: maps
    })
  };

  render() {
    return (
      <div style={{ height: '100vh', width: '100%' }}>
        <GoogleMapReact
          bootstrapURLKeys={{ key: API_KEY}}
          center={this.selectCenter()}
          defaultZoom={5}
          options={{styles: lightMode ? lightTheme : darkTheme}}
          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded({ map, maps })}
        >        
        </GoogleMapReact>
    </div>
    )
  }
};

export default GumMap
import styled from 'styled-components';
const Map = styled.div`
    position: relative;
    background: #ffffff;
`;
const Frame = styled.iframe`
    width: 100%;
    height: 375px;
    margin-bottom: -7px;
`

function GumMap() {
  return(
    <>
        <div class="contact mt-100">
            <div class="container">
                <div class="section-header">
                    <h2>Contact Us</h2>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ac lacus eget nunc imperdiet 
                    </p>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form">
                            <form class="contactForm">
                                <div class="form-row">
                                    <div class="form-group col-sm-6">
                                        <input type="text" class="form-control" placeholder="Your Name" />
                                    </div>
                                    <div class="form-group col-sm-6">
                                        <input type="email" class="form-control" placeholder="Your Email" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" placeholder="Subject" />
                                </div>
                                <div class="form-group">
                                    <textarea class="form-control" rows="5" placeholder="Message"></textarea>
                                </div>
                                <div><button class="btn" type="submit">Send Message</button></div>
                            </form>
                        </div>
                    </div>
                    <div class="col-md-6">
                      <Map>
                        <Frame src="https://www.google.com/maps/embed?pvb=!1m18!1m12!1m3!1d26361250.667320687!2d-113.75533773453304!3d36.24128894212527!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x54eab584e432360b%3A0x1c3bb99243deb742!2sUnited%20States!5e0!3m2!1sen!2sbd!4v1574923227698!5m2!1sen!2sbd" frameBorder={"0"} style={{border: 0}} allowFullScreen=" "></Frame>
                      </Map>
                    </div>
                </div>
            </div>
        </div>
    </>
  );
}
export default GumMap;